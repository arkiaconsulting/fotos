@page "/album/{FolderId:guid}/{AlbumId:guid}"
@using Fotos.Client.Features
@using Fotos.Client.Features.PhotoFolders
@using System.Buffers

@inject GetAlbum GetAlbum
@inject AddPhoto AddPhoto

@if (_album is null)
{
    <h3>Loading...</h3>
}
else
{
    <div id="album">
        <h3 id="album-name">@_album.Value.Name</h3>
        <span>New photo</span><InputFile OnChange="UploadPhoto" />
    </div>

    <Thumbnails @ref="_thumbnailsComponent" FolderId="FolderId" AlbumId="AlbumId" />
}

@if (_alertMessage is not null)
{
    <div id="alert">
        <p>@_alertMessage</p>
    </div>
}

@code {
    [Parameter]
    public Guid AlbumId { get; set; }

    [Parameter]
    public Guid FolderId { get; set; }

    private Album? _album = default!;
    private Thumbnails _thumbnailsComponent = default!;
    private string? _alertMessage;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _album = await GetAlbum(FolderId, AlbumId);

            StateHasChanged();
        }
    }

    private async Task UploadPhoto(InputFileChangeEventArgs e)
    {
        var file = e.File;

        if (file.Size > Constants.MaxPhotoSize)
        {
            _alertMessage = "The file is too large.";
            StateHasChanged();
            return;
        }

        if (!Constants.AllowedPhotoContentTypes.Contains(file.ContentType, StringComparer.OrdinalIgnoreCase))
        {
            _alertMessage = "Only photos can be uploaded.";
            StateHasChanged();
            return;
        }

        byte[] buffer = ArrayPool<byte>.Shared.Rent(512 * 1024);
        using var stream = file.OpenReadStream(maxAllowedSize: Constants.MaxPhotoSize);

        using var ms = new MemoryStream();
        int bytesRead;
        long totalBytesRead = 0;
        while ((bytesRead = await stream.ReadAsync(buffer)) != 0)
        {
            totalBytesRead += bytesRead;
            await ms.WriteAsync(buffer.AsMemory(0, bytesRead));
        };

        var id = await AddPhoto(FolderId, AlbumId, new(ms.ToArray(), file.ContentType));

        var photo = new Photo(id, FolderId, AlbumId);
        _thumbnailsComponent.AddPhoto(photo);
    }
}
